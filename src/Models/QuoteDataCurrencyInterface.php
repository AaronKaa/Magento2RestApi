<?php
/*
 * MagentoCommunityLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace MagentoCommunityLib\Models;

use JsonSerializable;

/**
 * @todo Write general description for this model
 */
class QuoteDataCurrencyInterface implements JsonSerializable
{
    /**
     * Global currency code
     * @maps global_currency_code
     * @var string|null $globalCurrencyCode public property
     */
    public $globalCurrencyCode;

    /**
     * Base currency code
     * @maps base_currency_code
     * @var string|null $baseCurrencyCode public property
     */
    public $baseCurrencyCode;

    /**
     * Store currency code
     * @maps store_currency_code
     * @var string|null $storeCurrencyCode public property
     */
    public $storeCurrencyCode;

    /**
     * Quote currency code
     * @maps quote_currency_code
     * @var string|null $quoteCurrencyCode public property
     */
    public $quoteCurrencyCode;

    /**
     * Store currency to base currency rate
     * @maps store_to_base_rate
     * @var double|null $storeToBaseRate public property
     */
    public $storeToBaseRate;

    /**
     * Store currency to quote currency rate
     * @maps store_to_quote_rate
     * @var double|null $storeToQuoteRate public property
     */
    public $storeToQuoteRate;

    /**
     * Base currency to global currency rate
     * @maps base_to_global_rate
     * @var double|null $baseToGlobalRate public property
     */
    public $baseToGlobalRate;

    /**
     * Base currency to quote currency rate
     * @maps base_to_quote_rate
     * @var double|null $baseToQuoteRate public property
     */
    public $baseToQuoteRate;

    /**
     * ExtensionInterface class for @see \Magento\Quote\Api\Data\CurrencyInterface
     * @maps extension_attributes
     * @var object|null $extensionAttributes public property
     */
    public $extensionAttributes;

    /**
     * Constructor to set initial or default values of member properties
     * @param string $globalCurrencyCode  Initialization value for $this->globalCurrencyCode
     * @param string $baseCurrencyCode    Initialization value for $this->baseCurrencyCode
     * @param string $storeCurrencyCode   Initialization value for $this->storeCurrencyCode
     * @param string $quoteCurrencyCode   Initialization value for $this->quoteCurrencyCode
     * @param double $storeToBaseRate     Initialization value for $this->storeToBaseRate
     * @param double $storeToQuoteRate    Initialization value for $this->storeToQuoteRate
     * @param double $baseToGlobalRate    Initialization value for $this->baseToGlobalRate
     * @param double $baseToQuoteRate     Initialization value for $this->baseToQuoteRate
     * @param object $extensionAttributes Initialization value for $this->extensionAttributes
     */
    public function __construct()
    {
        if (9 == func_num_args()) {
            $this->globalCurrencyCode  = func_get_arg(0);
            $this->baseCurrencyCode    = func_get_arg(1);
            $this->storeCurrencyCode   = func_get_arg(2);
            $this->quoteCurrencyCode   = func_get_arg(3);
            $this->storeToBaseRate     = func_get_arg(4);
            $this->storeToQuoteRate    = func_get_arg(5);
            $this->baseToGlobalRate    = func_get_arg(6);
            $this->baseToQuoteRate     = func_get_arg(7);
            $this->extensionAttributes = func_get_arg(8);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['global_currency_code'] = $this->globalCurrencyCode;
        $json['base_currency_code']   = $this->baseCurrencyCode;
        $json['store_currency_code']  = $this->storeCurrencyCode;
        $json['quote_currency_code']  = $this->quoteCurrencyCode;
        $json['store_to_base_rate']   = $this->storeToBaseRate;
        $json['store_to_quote_rate']  = $this->storeToQuoteRate;
        $json['base_to_global_rate']  = $this->baseToGlobalRate;
        $json['base_to_quote_rate']   = $this->baseToQuoteRate;
        $json['extension_attributes'] = $this->extensionAttributes;

        return $json;
    }
}
