<?php
/*
 * MagentoCommunityLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace MagentoCommunityLib\Models;

use JsonSerializable;

/**
 * @todo Write general description for this model
 */
class CatalogDataProductCustomOptionInterface implements JsonSerializable
{
    /**
     * Product SKU
     * @required
     * @maps product_sku
     * @var string $productSku public property
     */
    public $productSku;

    /**
     * Option title
     * @required
     * @var string $title public property
     */
    public $title;

    /**
     * Option type
     * @required
     * @var string $type public property
     */
    public $type;

    /**
     * Sort order
     * @required
     * @maps sort_order
     * @var integer $sortOrder public property
     */
    public $sortOrder;

    /**
     * Is require
     * @required
     * @maps is_require
     * @var bool $isRequire public property
     */
    public $isRequire;

    /**
     * Option id
     * @maps option_id
     * @var integer|null $optionId public property
     */
    public $optionId;

    /**
     * Price
     * @var double|null $price public property
     */
    public $price;

    /**
     * Price type
     * @maps price_type
     * @var string|null $priceType public property
     */
    public $priceType;

    /**
     * Sku
     * @var string|null $sku public property
     */
    public $sku;

    /**
     * @todo Write general description for this property
     * @maps file_extension
     * @var string|null $fileExtension public property
     */
    public $fileExtension;

    /**
     * @todo Write general description for this property
     * @maps max_characters
     * @var integer|null $maxCharacters public property
     */
    public $maxCharacters;

    /**
     * @todo Write general description for this property
     * @maps image_size_x
     * @var integer|null $imageSizeX public property
     */
    public $imageSizeX;

    /**
     * @todo Write general description for this property
     * @maps image_size_y
     * @var integer|null $imageSizeY public property
     */
    public $imageSizeY;

    /**
     * @todo Write general description for this property
     * @var \MagentoCommunityLib\Models\CatalogDataProductCustomOptionValuesInterface[]|null $values public property
     */
    public $values;

    /**
     * ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductCustomOptionInterface
     * @maps extension_attributes
     * @var object|null $extensionAttributes public property
     */
    public $extensionAttributes;

    /**
     * Constructor to set initial or default values of member properties
     * @param string  $productSku          Initialization value for $this->productSku
     * @param string  $title               Initialization value for $this->title
     * @param string  $type                Initialization value for $this->type
     * @param integer $sortOrder           Initialization value for $this->sortOrder
     * @param bool    $isRequire           Initialization value for $this->isRequire
     * @param integer $optionId            Initialization value for $this->optionId
     * @param double  $price               Initialization value for $this->price
     * @param string  $priceType           Initialization value for $this->priceType
     * @param string  $sku                 Initialization value for $this->sku
     * @param string  $fileExtension       Initialization value for $this->fileExtension
     * @param integer $maxCharacters       Initialization value for $this->maxCharacters
     * @param integer $imageSizeX          Initialization value for $this->imageSizeX
     * @param integer $imageSizeY          Initialization value for $this->imageSizeY
     * @param array   $values              Initialization value for $this->values
     * @param object  $extensionAttributes Initialization value for $this->extensionAttributes
     */
    public function __construct()
    {
        if (15 == func_num_args()) {
            $this->productSku          = func_get_arg(0);
            $this->title               = func_get_arg(1);
            $this->type                = func_get_arg(2);
            $this->sortOrder           = func_get_arg(3);
            $this->isRequire           = func_get_arg(4);
            $this->optionId            = func_get_arg(5);
            $this->price               = func_get_arg(6);
            $this->priceType           = func_get_arg(7);
            $this->sku                 = func_get_arg(8);
            $this->fileExtension       = func_get_arg(9);
            $this->maxCharacters       = func_get_arg(10);
            $this->imageSizeX          = func_get_arg(11);
            $this->imageSizeY          = func_get_arg(12);
            $this->values              = func_get_arg(13);
            $this->extensionAttributes = func_get_arg(14);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['product_sku']          = $this->productSku;
        $json['title']                = $this->title;
        $json['type']                 = $this->type;
        $json['sort_order']           = $this->sortOrder;
        $json['is_require']           = $this->isRequire;
        $json['option_id']            = $this->optionId;
        $json['price']                = $this->price;
        $json['price_type']           = $this->priceType;
        $json['sku']                  = $this->sku;
        $json['file_extension']       = $this->fileExtension;
        $json['max_characters']       = $this->maxCharacters;
        $json['image_size_x']         = $this->imageSizeX;
        $json['image_size_y']         = $this->imageSizeY;
        $json['values']               = $this->values;
        $json['extension_attributes'] = $this->extensionAttributes;

        return $json;
    }
}
