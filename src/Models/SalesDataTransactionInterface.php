<?php
/*
 * MagentoCommunityLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace MagentoCommunityLib\Models;

use JsonSerializable;

/**
 *Transaction interface. A transaction is an interaction between a merchant and a customer such as a
 * purchase, a credit, a refund, and so on.
 */
class SalesDataTransactionInterface implements JsonSerializable
{
    /**
     * Transaction ID.
     * @required
     * @maps transaction_id
     * @var integer $transactionId public property
     */
    public $transactionId;

    /**
     * Order ID.
     * @required
     * @maps order_id
     * @var integer $orderId public property
     */
    public $orderId;

    /**
     * Payment ID.
     * @required
     * @maps payment_id
     * @var integer $paymentId public property
     */
    public $paymentId;

    /**
     * Transaction business ID.
     * @required
     * @maps txn_id
     * @var string $txnId public property
     */
    public $txnId;

    /**
     * Parent transaction business ID.
     * @required
     * @maps parent_txn_id
     * @var string $parentTxnId public property
     */
    public $parentTxnId;

    /**
     * Transaction type.
     * @required
     * @maps txn_type
     * @var string $txnType public property
     */
    public $txnType;

    /**
     * Is-closed flag value.
     * @required
     * @maps is_closed
     * @var integer $isClosed public property
     */
    public $isClosed;

    /**
     * Created-at timestamp.
     * @required
     * @maps created_at
     * @var string $createdAt public property
     */
    public $createdAt;

    /**
     * Array of child transactions.
     * @required
     * @maps child_transactions
     * @var \MagentoCommunityLib\Models\SalesDataTransactionInterface[] $childTransactions public property
     */
    public $childTransactions;

    /**
     * The parent ID for the transaction. Otherwise, null.
     * @maps parent_id
     * @var integer|null $parentId public property
     */
    public $parentId;

    /**
     * Array of additional information. Otherwise, null.
     * @maps additional_information
     * @var array|null $additionalInformation public property
     */
    public $additionalInformation;

    /**
     * ExtensionInterface class for @see \Magento\Sales\Api\Data\TransactionInterface
     * @maps extension_attributes
     * @var object|null $extensionAttributes public property
     */
    public $extensionAttributes;

    /**
     * Constructor to set initial or default values of member properties
     * @param integer $transactionId         Initialization value for $this->transactionId
     * @param integer $orderId               Initialization value for $this->orderId
     * @param integer $paymentId             Initialization value for $this->paymentId
     * @param string  $txnId                 Initialization value for $this->txnId
     * @param string  $parentTxnId           Initialization value for $this->parentTxnId
     * @param string  $txnType               Initialization value for $this->txnType
     * @param integer $isClosed              Initialization value for $this->isClosed
     * @param string  $createdAt             Initialization value for $this->createdAt
     * @param array   $childTransactions     Initialization value for $this->childTransactions
     * @param integer $parentId              Initialization value for $this->parentId
     * @param array   $additionalInformation Initialization value for $this->additionalInformation
     * @param object  $extensionAttributes   Initialization value for $this->extensionAttributes
     */
    public function __construct()
    {
        if (12 == func_num_args()) {
            $this->transactionId         = func_get_arg(0);
            $this->orderId               = func_get_arg(1);
            $this->paymentId             = func_get_arg(2);
            $this->txnId                 = func_get_arg(3);
            $this->parentTxnId           = func_get_arg(4);
            $this->txnType               = func_get_arg(5);
            $this->isClosed              = func_get_arg(6);
            $this->createdAt             = func_get_arg(7);
            $this->childTransactions     = func_get_arg(8);
            $this->parentId              = func_get_arg(9);
            $this->additionalInformation = func_get_arg(10);
            $this->extensionAttributes   = func_get_arg(11);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['transaction_id']         = $this->transactionId;
        $json['order_id']               = $this->orderId;
        $json['payment_id']             = $this->paymentId;
        $json['txn_id']                 = $this->txnId;
        $json['parent_txn_id']          = $this->parentTxnId;
        $json['txn_type']               = $this->txnType;
        $json['is_closed']              = $this->isClosed;
        $json['created_at']             = $this->createdAt;
        $json['child_transactions']     = $this->childTransactions;
        $json['parent_id']              = $this->parentId;
        $json['additional_information'] = $this->additionalInformation;
        $json['extension_attributes']   = $this->extensionAttributes;

        return $json;
    }
}
