<?php
/*
 * MagentoCommunityLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace MagentoCommunityLib\Models;

use JsonSerializable;

/**
 *Interface ShippingMethodInterface
 */
class QuoteDataShippingMethodInterface implements JsonSerializable
{
    /**
     * Shipping carrier code.
     * @required
     * @maps carrier_code
     * @var string $carrierCode public property
     */
    public $carrierCode;

    /**
     * Shipping method code.
     * @required
     * @maps method_code
     * @var string $methodCode public property
     */
    public $methodCode;

    /**
     * Shipping amount in store currency.
     * @required
     * @var double $amount public property
     */
    public $amount;

    /**
     * Shipping amount in base currency.
     * @required
     * @maps base_amount
     * @var double $baseAmount public property
     */
    public $baseAmount;

    /**
     * The value of the availability flag for the current shipping method.
     * @required
     * @var bool $available public property
     */
    public $available;

    /**
     * Shipping Error message.
     * @required
     * @maps error_message
     * @var string $errorMessage public property
     */
    public $errorMessage;

    /**
     * Shipping price excl tax.
     * @required
     * @maps price_excl_tax
     * @var double $priceExclTax public property
     */
    public $priceExclTax;

    /**
     * Shipping price incl tax.
     * @required
     * @maps price_incl_tax
     * @var double $priceInclTax public property
     */
    public $priceInclTax;

    /**
     * Shipping carrier title. Otherwise, null.
     * @maps carrier_title
     * @var string|null $carrierTitle public property
     */
    public $carrierTitle;

    /**
     * Shipping method title. Otherwise, null.
     * @maps method_title
     * @var string|null $methodTitle public property
     */
    public $methodTitle;

    /**
     * ExtensionInterface class for @see \Magento\Quote\Api\Data\ShippingMethodInterface
     * @maps extension_attributes
     * @var object|null $extensionAttributes public property
     */
    public $extensionAttributes;

    /**
     * Constructor to set initial or default values of member properties
     * @param string $carrierCode         Initialization value for $this->carrierCode
     * @param string $methodCode          Initialization value for $this->methodCode
     * @param double $amount              Initialization value for $this->amount
     * @param double $baseAmount          Initialization value for $this->baseAmount
     * @param bool   $available           Initialization value for $this->available
     * @param string $errorMessage        Initialization value for $this->errorMessage
     * @param double $priceExclTax        Initialization value for $this->priceExclTax
     * @param double $priceInclTax        Initialization value for $this->priceInclTax
     * @param string $carrierTitle        Initialization value for $this->carrierTitle
     * @param string $methodTitle         Initialization value for $this->methodTitle
     * @param object $extensionAttributes Initialization value for $this->extensionAttributes
     */
    public function __construct()
    {
        if (11 == func_num_args()) {
            $this->carrierCode         = func_get_arg(0);
            $this->methodCode          = func_get_arg(1);
            $this->amount              = func_get_arg(2);
            $this->baseAmount          = func_get_arg(3);
            $this->available           = func_get_arg(4);
            $this->errorMessage        = func_get_arg(5);
            $this->priceExclTax        = func_get_arg(6);
            $this->priceInclTax        = func_get_arg(7);
            $this->carrierTitle        = func_get_arg(8);
            $this->methodTitle         = func_get_arg(9);
            $this->extensionAttributes = func_get_arg(10);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['carrier_code']         = $this->carrierCode;
        $json['method_code']          = $this->methodCode;
        $json['amount']               = $this->amount;
        $json['base_amount']          = $this->baseAmount;
        $json['available']            = $this->available;
        $json['error_message']        = $this->errorMessage;
        $json['price_excl_tax']       = $this->priceExclTax;
        $json['price_incl_tax']       = $this->priceInclTax;
        $json['carrier_title']        = $this->carrierTitle;
        $json['method_title']         = $this->methodTitle;
        $json['extension_attributes'] = $this->extensionAttributes;

        return $json;
    }
}
