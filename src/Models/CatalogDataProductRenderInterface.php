<?php
/*
 * MagentoCommunityLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace MagentoCommunityLib\Models;

use JsonSerializable;

/**
 *Represents Data Object which holds enough information to render product This information is put
 * into part as Add To Cart or Add to Compare Data or Price Data
 */
class CatalogDataProductRenderInterface implements JsonSerializable
{
    /**
     * Button interface. This interface represents all manner of product buttons: add to cart, add to
     * compare, etc... The buttons describes by this interface should have interaction with backend
     * @required
     * @maps add_to_cart_button
     * @var \MagentoCommunityLib\Models\CatalogDataProductRenderButtonInterface $addToCartButton public property
     */
    public $addToCartButton;

    /**
     * Button interface. This interface represents all manner of product buttons: add to cart, add to
     * compare, etc... The buttons describes by this interface should have interaction with backend
     * @required
     * @maps add_to_compare_button
     * @var \MagentoCommunityLib\Models\CatalogDataProductRenderButtonInterface $addToCompareButton public property
     */
    public $addToCompareButton;

    /**
     * Price interface.
     * @required
     * @maps price_info
     * @var \MagentoCommunityLib\Models\CatalogDataProductRenderPriceInfoInterface $priceInfo public property
     */
    public $priceInfo;

    /**
     * Enough information, that needed to render image on front
     * @required
     * @var \MagentoCommunityLib\Models\CatalogDataProductRenderImageInterface[] $images public property
     */
    public $images;

    /**
     * Product url
     * @required
     * @var string $url public property
     */
    public $url;

    /**
     * Product identifier
     * @required
     * @var integer $id public property
     */
    public $id;

    /**
     * Product name
     * @required
     * @var string $name public property
     */
    public $name;

    /**
     * Product type. Such as bundle, grouped, simple, etc...
     * @required
     * @var string $type public property
     */
    public $type;

    /**
     * Information about product saleability (In Stock)
     * @required
     * @maps is_salable
     * @var string $isSalable public property
     */
    public $isSalable;

    /**
     * Information about current store id or requested store id
     * @required
     * @maps store_id
     * @var integer $storeId public property
     */
    public $storeId;

    /**
     * Current or desired currency code to product
     * @required
     * @maps currency_code
     * @var string $currencyCode public property
     */
    public $currencyCode;

    /**
     * ExtensionInterface class for @see \Magento\Catalog\Api\Data\ProductRenderInterface
     * @required
     * @maps extension_attributes
     * @var \MagentoCommunityLib\Models\CatalogDataProductRenderExtensionInterface $extensionAttributes public property
     */
    public $extensionAttributes;

    /**
     * Constructor to set initial or default values of member properties
     * @param CatalogDataProductRenderButtonInterface    $addToCartButton     Initialization value for $this-
     *                                                                          >addToCartButton
     * @param CatalogDataProductRenderButtonInterface    $addToCompareButton  Initialization value for $this-
     *                                                                          >addToCompareButton
     * @param CatalogDataProductRenderPriceInfoInterface $priceInfo           Initialization value for $this-
     *                                                                          >priceInfo
     * @param array                                      $images              Initialization value for $this->images
     * @param string                                     $url                 Initialization value for $this->url
     * @param integer                                    $id                  Initialization value for $this->id
     * @param string                                     $name                Initialization value for $this->name
     * @param string                                     $type                Initialization value for $this->type
     * @param string                                     $isSalable           Initialization value for $this-
     *                                                                          >isSalable
     * @param integer                                    $storeId             Initialization value for $this->storeId
     * @param string                                     $currencyCode        Initialization value for $this-
     *                                                                          >currencyCode
     * @param CatalogDataProductRenderExtensionInterface $extensionAttributes Initialization value for $this-
     *                                                                          >extensionAttributes
     */
    public function __construct()
    {
        if (12 == func_num_args()) {
            $this->addToCartButton     = func_get_arg(0);
            $this->addToCompareButton  = func_get_arg(1);
            $this->priceInfo           = func_get_arg(2);
            $this->images              = func_get_arg(3);
            $this->url                 = func_get_arg(4);
            $this->id                  = func_get_arg(5);
            $this->name                = func_get_arg(6);
            $this->type                = func_get_arg(7);
            $this->isSalable           = func_get_arg(8);
            $this->storeId             = func_get_arg(9);
            $this->currencyCode        = func_get_arg(10);
            $this->extensionAttributes = func_get_arg(11);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['add_to_cart_button']    = $this->addToCartButton;
        $json['add_to_compare_button'] = $this->addToCompareButton;
        $json['price_info']            = $this->priceInfo;
        $json['images']                = $this->images;
        $json['url']                   = $this->url;
        $json['id']                    = $this->id;
        $json['name']                  = $this->name;
        $json['type']                  = $this->type;
        $json['is_salable']            = $this->isSalable;
        $json['store_id']              = $this->storeId;
        $json['currency_code']         = $this->currencyCode;
        $json['extension_attributes']  = $this->extensionAttributes;

        return $json;
    }
}
