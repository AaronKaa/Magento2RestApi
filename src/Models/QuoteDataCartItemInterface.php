<?php
/*
 * MagentoCommunityLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace MagentoCommunityLib\Models;

use JsonSerializable;

/**
 *Interface CartItemInterface
 */
class QuoteDataCartItemInterface implements JsonSerializable
{
    /**
     * Product quantity.
     * @required
     * @var double $qty public property
     */
    public $qty;

    /**
     * Quote id.
     * @required
     * @maps quote_id
     * @var string $quoteId public property
     */
    public $quoteId;

    /**
     * Item ID. Otherwise, null.
     * @maps item_id
     * @var integer|null $itemId public property
     */
    public $itemId;

    /**
     * Product SKU. Otherwise, null.
     * @var string|null $sku public property
     */
    public $sku;

    /**
     * Product name. Otherwise, null.
     * @var string|null $name public property
     */
    public $name;

    /**
     * Product price. Otherwise, null.
     * @var double|null $price public property
     */
    public $price;

    /**
     * Product type. Otherwise, null.
     * @maps product_type
     * @var string|null $productType public property
     */
    public $productType;

    /**
     * Product option interface
     * @maps product_option
     * @var \MagentoCommunityLib\Models\QuoteDataProductOptionInterface|null $productOption public property
     */
    public $productOption;

    /**
     * ExtensionInterface class for @see \Magento\Quote\Api\Data\CartItemInterface
     * @maps extension_attributes
     * @var object|null $extensionAttributes public property
     */
    public $extensionAttributes;

    /**
     * Constructor to set initial or default values of member properties
     * @param double                          $qty                 Initialization value for $this->qty
     * @param string                          $quoteId             Initialization value for $this->quoteId
     * @param integer                         $itemId              Initialization value for $this->itemId
     * @param string                          $sku                 Initialization value for $this->sku
     * @param string                          $name                Initialization value for $this->name
     * @param double                          $price               Initialization value for $this->price
     * @param string                          $productType         Initialization value for $this->productType
     * @param QuoteDataProductOptionInterface $productOption       Initialization value for $this->productOption
     * @param object                          $extensionAttributes Initialization value for $this-
     *                                                               >extensionAttributes
     */
    public function __construct()
    {
        if (9 == func_num_args()) {
            $this->qty                 = func_get_arg(0);
            $this->quoteId             = func_get_arg(1);
            $this->itemId              = func_get_arg(2);
            $this->sku                 = func_get_arg(3);
            $this->name                = func_get_arg(4);
            $this->price               = func_get_arg(5);
            $this->productType         = func_get_arg(6);
            $this->productOption       = func_get_arg(7);
            $this->extensionAttributes = func_get_arg(8);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['qty']                  = $this->qty;
        $json['quote_id']             = $this->quoteId;
        $json['item_id']              = $this->itemId;
        $json['sku']                  = $this->sku;
        $json['name']                 = $this->name;
        $json['price']                = $this->price;
        $json['product_type']         = $this->productType;
        $json['product_option']       = $this->productOption;
        $json['extension_attributes'] = $this->extensionAttributes;

        return $json;
    }
}
