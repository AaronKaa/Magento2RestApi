<?php
/*
 * MagentoCommunityLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace MagentoCommunityLib\Models;

use JsonSerializable;

/**
 *Interface CartInterface
 */
class QuoteDataCartInterface implements JsonSerializable
{
    /**
     * Cart/quote ID.
     * @required
     * @var integer $id public property
     */
    public $id;

    /**
     * Customer interface.
     * @required
     * @var \MagentoCommunityLib\Models\CustomerDataCustomerInterface $customer public property
     */
    public $customer;

    /**
     * Store identifier
     * @required
     * @maps store_id
     * @var integer $storeId public property
     */
    public $storeId;

    /**
     * Cart creation date and time. Otherwise, null.
     * @maps created_at
     * @var string|null $createdAt public property
     */
    public $createdAt;

    /**
     * Cart last update date and time. Otherwise, null.
     * @maps updated_at
     * @var string|null $updatedAt public property
     */
    public $updatedAt;

    /**
     * Cart conversion date and time. Otherwise, null.
     * @maps converted_at
     * @var string|null $convertedAt public property
     */
    public $convertedAt;

    /**
     * Active status flag value. Otherwise, null.
     * @maps is_active
     * @var bool|null $isActive public property
     */
    public $isActive;

    /**
     * Virtual flag value. Otherwise, null.
     * @maps is_virtual
     * @var bool|null $isVirtual public property
     */
    public $isVirtual;

    /**
     * Array of items. Otherwise, null.
     * @var \MagentoCommunityLib\Models\QuoteDataCartItemInterface[]|null $items public property
     */
    public $items;

    /**
     * Number of different items or products in the cart. Otherwise, null.
     * @maps items_count
     * @var integer|null $itemsCount public property
     */
    public $itemsCount;

    /**
     * Total quantity of all cart items. Otherwise, null.
     * @maps items_qty
     * @var double|null $itemsQty public property
     */
    public $itemsQty;

    /**
     * Interface AddressInterface
     * @maps billing_address
     * @var \MagentoCommunityLib\Models\QuoteDataAddressInterface|null $billingAddress public property
     */
    public $billingAddress;

    /**
     * Reserved order ID. Otherwise, null.
     * @maps reserved_order_id
     * @var integer|null $reservedOrderId public property
     */
    public $reservedOrderId;

    /**
     * Original order ID. Otherwise, null.
     * @maps orig_order_id
     * @var integer|null $origOrderId public property
     */
    public $origOrderId;

    /**
     * Interface CurrencyInterface
     * @var \MagentoCommunityLib\Models\QuoteDataCurrencyInterface|null $currency public property
     */
    public $currency;

    /**
     * For guest customers, false for logged in customers
     * @maps customer_is_guest
     * @var bool|null $customerIsGuest public property
     */
    public $customerIsGuest;

    /**
     * Notice text
     * @maps customer_note
     * @var string|null $customerNote public property
     */
    public $customerNote;

    /**
     * Customer notification flag
     * @maps customer_note_notify
     * @var bool|null $customerNoteNotify public property
     */
    public $customerNoteNotify;

    /**
     * Customer tax class ID.
     * @maps customer_tax_class_id
     * @var integer|null $customerTaxClassId public property
     */
    public $customerTaxClassId;

    /**
     * ExtensionInterface class for @see \Magento\Quote\Api\Data\CartInterface
     * @maps extension_attributes
     * @var \MagentoCommunityLib\Models\QuoteDataCartExtensionInterface|null $extensionAttributes public property
     */
    public $extensionAttributes;

    /**
     * Constructor to set initial or default values of member properties
     * @param integer                         $id                  Initialization value for $this->id
     * @param CustomerDataCustomerInterface   $customer            Initialization value for $this->customer
     * @param integer                         $storeId             Initialization value for $this->storeId
     * @param string                          $createdAt           Initialization value for $this->createdAt
     * @param string                          $updatedAt           Initialization value for $this->updatedAt
     * @param string                          $convertedAt         Initialization value for $this->convertedAt
     * @param bool                            $isActive            Initialization value for $this->isActive
     * @param bool                            $isVirtual           Initialization value for $this->isVirtual
     * @param array                           $items               Initialization value for $this->items
     * @param integer                         $itemsCount          Initialization value for $this->itemsCount
     * @param double                          $itemsQty            Initialization value for $this->itemsQty
     * @param QuoteDataAddressInterface       $billingAddress      Initialization value for $this->billingAddress
     * @param integer                         $reservedOrderId     Initialization value for $this->reservedOrderId
     * @param integer                         $origOrderId         Initialization value for $this->origOrderId
     * @param QuoteDataCurrencyInterface      $currency            Initialization value for $this->currency
     * @param bool                            $customerIsGuest     Initialization value for $this->customerIsGuest
     * @param string                          $customerNote        Initialization value for $this->customerNote
     * @param bool                            $customerNoteNotify  Initialization value for $this->customerNoteNotify
     * @param integer                         $customerTaxClassId  Initialization value for $this->customerTaxClassId
     * @param QuoteDataCartExtensionInterface $extensionAttributes Initialization value for $this-
     *                                                               >extensionAttributes
     */
    public function __construct()
    {
        if (20 == func_num_args()) {
            $this->id                  = func_get_arg(0);
            $this->customer            = func_get_arg(1);
            $this->storeId             = func_get_arg(2);
            $this->createdAt           = func_get_arg(3);
            $this->updatedAt           = func_get_arg(4);
            $this->convertedAt         = func_get_arg(5);
            $this->isActive            = func_get_arg(6);
            $this->isVirtual           = func_get_arg(7);
            $this->items               = func_get_arg(8);
            $this->itemsCount          = func_get_arg(9);
            $this->itemsQty            = func_get_arg(10);
            $this->billingAddress      = func_get_arg(11);
            $this->reservedOrderId     = func_get_arg(12);
            $this->origOrderId         = func_get_arg(13);
            $this->currency            = func_get_arg(14);
            $this->customerIsGuest     = func_get_arg(15);
            $this->customerNote        = func_get_arg(16);
            $this->customerNoteNotify  = func_get_arg(17);
            $this->customerTaxClassId  = func_get_arg(18);
            $this->extensionAttributes = func_get_arg(19);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['id']                    = $this->id;
        $json['customer']              = $this->customer;
        $json['store_id']              = $this->storeId;
        $json['created_at']            = $this->createdAt;
        $json['updated_at']            = $this->updatedAt;
        $json['converted_at']          = $this->convertedAt;
        $json['is_active']             = $this->isActive;
        $json['is_virtual']            = $this->isVirtual;
        $json['items']                 = $this->items;
        $json['items_count']           = $this->itemsCount;
        $json['items_qty']             = $this->itemsQty;
        $json['billing_address']       = $this->billingAddress;
        $json['reserved_order_id']     = $this->reservedOrderId;
        $json['orig_order_id']         = $this->origOrderId;
        $json['currency']              = $this->currency;
        $json['customer_is_guest']     = $this->customerIsGuest;
        $json['customer_note']         = $this->customerNote;
        $json['customer_note_notify']  = $this->customerNoteNotify;
        $json['customer_tax_class_id'] = $this->customerTaxClassId;
        $json['extension_attributes']  = $this->extensionAttributes;

        return $json;
    }
}
