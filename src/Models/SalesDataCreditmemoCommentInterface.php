<?php
/*
 * MagentoCommunityLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace MagentoCommunityLib\Models;

use JsonSerializable;

/**
 *Credit memo comment interface. After a customer places and pays for an order and an invoice has
 * been issued, the merchant can create a credit memo to refund all or part of the amount paid for any
 * returned or undelivered items. The memo restores funds to the customer account so that the customer
 * can make future purchases. A credit memo usually includes comments that detail why the credit memo
 * amount was credited to the customer.
 */
class SalesDataCreditmemoCommentInterface implements JsonSerializable
{
    /**
     * Comment.
     * @required
     * @var string $comment public property
     */
    public $comment;

    /**
     * Is-customer-notified flag value.
     * @required
     * @maps is_customer_notified
     * @var integer $isCustomerNotified public property
     */
    public $isCustomerNotified;

    /**
     * Is-visible-on-storefront flag value.
     * @required
     * @maps is_visible_on_front
     * @var integer $isVisibleOnFront public property
     */
    public $isVisibleOnFront;

    /**
     * Parent ID.
     * @required
     * @maps parent_id
     * @var integer $parentId public property
     */
    public $parentId;

    /**
     * Created-at timestamp.
     * @maps created_at
     * @var string|null $createdAt public property
     */
    public $createdAt;

    /**
     * Credit memo ID.
     * @maps entity_id
     * @var integer|null $entityId public property
     */
    public $entityId;

    /**
     * ExtensionInterface class for @see \Magento\Sales\Api\Data\CreditmemoCommentInterface
     * @maps extension_attributes
     * @var object|null $extensionAttributes public property
     */
    public $extensionAttributes;

    /**
     * Constructor to set initial or default values of member properties
     * @param string  $comment             Initialization value for $this->comment
     * @param integer $isCustomerNotified  Initialization value for $this->isCustomerNotified
     * @param integer $isVisibleOnFront    Initialization value for $this->isVisibleOnFront
     * @param integer $parentId            Initialization value for $this->parentId
     * @param string  $createdAt           Initialization value for $this->createdAt
     * @param integer $entityId            Initialization value for $this->entityId
     * @param object  $extensionAttributes Initialization value for $this->extensionAttributes
     */
    public function __construct()
    {
        if (7 == func_num_args()) {
            $this->comment             = func_get_arg(0);
            $this->isCustomerNotified  = func_get_arg(1);
            $this->isVisibleOnFront    = func_get_arg(2);
            $this->parentId            = func_get_arg(3);
            $this->createdAt           = func_get_arg(4);
            $this->entityId            = func_get_arg(5);
            $this->extensionAttributes = func_get_arg(6);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['comment']              = $this->comment;
        $json['is_customer_notified'] = $this->isCustomerNotified;
        $json['is_visible_on_front']  = $this->isVisibleOnFront;
        $json['parent_id']            = $this->parentId;
        $json['created_at']           = $this->createdAt;
        $json['entity_id']            = $this->entityId;
        $json['extension_attributes'] = $this->extensionAttributes;

        return $json;
    }
}
