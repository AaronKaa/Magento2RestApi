<?php
/*
 * MagentoCommunityLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace MagentoCommunityLib\Models;

use JsonSerializable;

/**
 *Customer attribute metadata interface.
 */
class CustomerDataAttributeMetadataInterface implements JsonSerializable
{
    /**
     * HTML for input element.
     * @required
     * @maps frontend_input
     * @var string $frontendInput public property
     */
    public $frontendInput;

    /**
     * Template used for input (e.g. "date")
     * @required
     * @maps input_filter
     * @var string $inputFilter public property
     */
    public $inputFilter;

    /**
     * Label of the store.
     * @required
     * @maps store_label
     * @var string $storeLabel public property
     */
    public $storeLabel;

    /**
     * Validation rules.
     * @required
     * @maps validation_rules
     * @var \MagentoCommunityLib\Models\CustomerDataValidationRuleInterface[] $validationRules public property
     */
    public $validationRules;

    /**
     * Of lines of the attribute value.
     * @required
     * @maps multiline_count
     * @var integer $multilineCount public property
     */
    public $multilineCount;

    /**
     * Attribute is visible on frontend.
     * @required
     * @var bool $visible public property
     */
    public $visible;

    /**
     * Attribute is required.
     * @required
     * @var bool $required public property
     */
    public $required;

    /**
     * Data model for attribute.
     * @required
     * @maps data_model
     * @var string $dataModel public property
     */
    public $dataModel;

    /**
     * Options of the attribute (key => value pairs for select)
     * @required
     * @var \MagentoCommunityLib\Models\CustomerDataOptionInterface[] $options public property
     */
    public $options;

    /**
     * Class which is used to display the attribute on frontend.
     * @required
     * @maps frontend_class
     * @var string $frontendClass public property
     */
    public $frontendClass;

    /**
     * Current attribute has been defined by a user.
     * @required
     * @maps user_defined
     * @var bool $userDefined public property
     */
    public $userDefined;

    /**
     * Attributes sort order.
     * @required
     * @maps sort_order
     * @var integer $sortOrder public property
     */
    public $sortOrder;

    /**
     * Label which supposed to be displayed on frontend.
     * @required
     * @maps frontend_label
     * @var string $frontendLabel public property
     */
    public $frontendLabel;

    /**
     * The note attribute for the element.
     * @required
     * @var string $note public property
     */
    public $note;

    /**
     * This is a system attribute.
     * @required
     * @var bool $system public property
     */
    public $system;

    /**
     * Backend type.
     * @required
     * @maps backend_type
     * @var string $backendType public property
     */
    public $backendType;

    /**
     * Code of the attribute.
     * @required
     * @maps attribute_code
     * @var string $attributeCode public property
     */
    public $attributeCode;

    /**
     * It is used in customer grid
     * @maps is_used_in_grid
     * @var bool|null $isUsedInGrid public property
     */
    public $isUsedInGrid;

    /**
     * It is visible in customer grid
     * @maps is_visible_in_grid
     * @var bool|null $isVisibleInGrid public property
     */
    public $isVisibleInGrid;

    /**
     * It is filterable in customer grid
     * @maps is_filterable_in_grid
     * @var bool|null $isFilterableInGrid public property
     */
    public $isFilterableInGrid;

    /**
     * It is searchable in customer grid
     * @maps is_searchable_in_grid
     * @var bool|null $isSearchableInGrid public property
     */
    public $isSearchableInGrid;

    /**
     * Constructor to set initial or default values of member properties
     * @param string  $frontendInput      Initialization value for $this->frontendInput
     * @param string  $inputFilter        Initialization value for $this->inputFilter
     * @param string  $storeLabel         Initialization value for $this->storeLabel
     * @param array   $validationRules    Initialization value for $this->validationRules
     * @param integer $multilineCount     Initialization value for $this->multilineCount
     * @param bool    $visible            Initialization value for $this->visible
     * @param bool    $required           Initialization value for $this->required
     * @param string  $dataModel          Initialization value for $this->dataModel
     * @param array   $options            Initialization value for $this->options
     * @param string  $frontendClass      Initialization value for $this->frontendClass
     * @param bool    $userDefined        Initialization value for $this->userDefined
     * @param integer $sortOrder          Initialization value for $this->sortOrder
     * @param string  $frontendLabel      Initialization value for $this->frontendLabel
     * @param string  $note               Initialization value for $this->note
     * @param bool    $system             Initialization value for $this->system
     * @param string  $backendType        Initialization value for $this->backendType
     * @param string  $attributeCode      Initialization value for $this->attributeCode
     * @param bool    $isUsedInGrid       Initialization value for $this->isUsedInGrid
     * @param bool    $isVisibleInGrid    Initialization value for $this->isVisibleInGrid
     * @param bool    $isFilterableInGrid Initialization value for $this->isFilterableInGrid
     * @param bool    $isSearchableInGrid Initialization value for $this->isSearchableInGrid
     */
    public function __construct()
    {
        if (21 == func_num_args()) {
            $this->frontendInput      = func_get_arg(0);
            $this->inputFilter        = func_get_arg(1);
            $this->storeLabel         = func_get_arg(2);
            $this->validationRules    = func_get_arg(3);
            $this->multilineCount     = func_get_arg(4);
            $this->visible            = func_get_arg(5);
            $this->required           = func_get_arg(6);
            $this->dataModel          = func_get_arg(7);
            $this->options            = func_get_arg(8);
            $this->frontendClass      = func_get_arg(9);
            $this->userDefined        = func_get_arg(10);
            $this->sortOrder          = func_get_arg(11);
            $this->frontendLabel      = func_get_arg(12);
            $this->note               = func_get_arg(13);
            $this->system             = func_get_arg(14);
            $this->backendType        = func_get_arg(15);
            $this->attributeCode      = func_get_arg(16);
            $this->isUsedInGrid       = func_get_arg(17);
            $this->isVisibleInGrid    = func_get_arg(18);
            $this->isFilterableInGrid = func_get_arg(19);
            $this->isSearchableInGrid = func_get_arg(20);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['frontend_input']        = $this->frontendInput;
        $json['input_filter']          = $this->inputFilter;
        $json['store_label']           = $this->storeLabel;
        $json['validation_rules']      = $this->validationRules;
        $json['multiline_count']       = $this->multilineCount;
        $json['visible']               = $this->visible;
        $json['required']              = $this->required;
        $json['data_model']            = $this->dataModel;
        $json['options']               = $this->options;
        $json['frontend_class']        = $this->frontendClass;
        $json['user_defined']          = $this->userDefined;
        $json['sort_order']            = $this->sortOrder;
        $json['frontend_label']        = $this->frontendLabel;
        $json['note']                  = $this->note;
        $json['system']                = $this->system;
        $json['backend_type']          = $this->backendType;
        $json['attribute_code']        = $this->attributeCode;
        $json['is_used_in_grid']       = $this->isUsedInGrid;
        $json['is_visible_in_grid']    = $this->isVisibleInGrid;
        $json['is_filterable_in_grid'] = $this->isFilterableInGrid;
        $json['is_searchable_in_grid'] = $this->isSearchableInGrid;

        return $json;
    }
}
